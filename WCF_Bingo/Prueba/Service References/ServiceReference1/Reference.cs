//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using WCF_Bingo.Clases;

namespace Prueba.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GenerarNumero", ReplyAction="http://tempuri.org/IService1/GenerarNumeroResponse")]
        int GenerarNumero(int p_iNumeroTecho, int[] p_lista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GenerarNumero", ReplyAction="http://tempuri.org/IService1/GenerarNumeroResponse")]
        System.Threading.Tasks.Task<int> GenerarNumeroAsync(int p_iNumeroTecho, int[] p_lista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/crearJugador", ReplyAction="http://tempuri.org/IService1/crearJugadorResponse")]
        WCF_Bingo.Clases.clsJugador[] crearJugador(WCF_Bingo.Clases.clsJugador[] listaJugadores, int nombreUsuario, int cantidadCartones, int cantidadNumerosAJugar, int modalidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/crearJugador", ReplyAction="http://tempuri.org/IService1/crearJugadorResponse")]
        System.Threading.Tasks.Task<WCF_Bingo.Clases.clsJugador[]> crearJugadorAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores, int nombreUsuario, int cantidadCartones, int cantidadNumerosAJugar, int modalidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/actualizarEstados", ReplyAction="http://tempuri.org/IService1/actualizarEstadosResponse")]
        WCF_Bingo.Clases.clsJugador[] actualizarEstados(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroAleatorio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/actualizarEstados", ReplyAction="http://tempuri.org/IService1/actualizarEstadosResponse")]
        System.Threading.Tasks.Task<WCF_Bingo.Clases.clsJugador[]> actualizarEstadosAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroAleatorio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/jugadoresGanadores", ReplyAction="http://tempuri.org/IService1/jugadoresGanadoresResponse")]
        WCF_Bingo.Clases.clsJugador[] jugadoresGanadores(WCF_Bingo.Clases.clsJugador[] listaJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/jugadoresGanadores", ReplyAction="http://tempuri.org/IService1/jugadoresGanadoresResponse")]
        System.Threading.Tasks.Task<WCF_Bingo.Clases.clsJugador[]> jugadoresGanadoresAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/consultarCarton", ReplyAction="http://tempuri.org/IService1/consultarCartonResponse")]
        WCF_Bingo.Clases.clsCarton consultarCarton(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroJugador, int indiceCarton);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/consultarCarton", ReplyAction="http://tempuri.org/IService1/consultarCartonResponse")]
        System.Threading.Tasks.Task<WCF_Bingo.Clases.clsCarton> consultarCartonAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroJugador, int indiceCarton);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/cantidadJugadores", ReplyAction="http://tempuri.org/IService1/cantidadJugadoresResponse")]
        int cantidadJugadores(WCF_Bingo.Clases.clsJugador[] listaJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/cantidadJugadores", ReplyAction="http://tempuri.org/IService1/cantidadJugadoresResponse")]
        System.Threading.Tasks.Task<int> cantidadJugadoresAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/cantidadCartonesPorJugador", ReplyAction="http://tempuri.org/IService1/cantidadCartonesPorJugadorResponse")]
        int cantidadCartonesPorJugador(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/cantidadCartonesPorJugador", ReplyAction="http://tempuri.org/IService1/cantidadCartonesPorJugadorResponse")]
        System.Threading.Tasks.Task<int> cantidadCartonesPorJugadorAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroJugador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Prueba.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Prueba.ServiceReference1.IService1>, Prueba.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GenerarNumero(int p_iNumeroTecho, int[] p_lista) {
            return base.Channel.GenerarNumero(p_iNumeroTecho, p_lista);
        }
        
        public System.Threading.Tasks.Task<int> GenerarNumeroAsync(int p_iNumeroTecho, int[] p_lista) {
            return base.Channel.GenerarNumeroAsync(p_iNumeroTecho, p_lista);
        }
        
        public WCF_Bingo.Clases.clsJugador[] crearJugador(WCF_Bingo.Clases.clsJugador[] listaJugadores, int nombreUsuario, int cantidadCartones, int cantidadNumerosAJugar, int modalidad) {
            return base.Channel.crearJugador(listaJugadores, nombreUsuario, cantidadCartones, cantidadNumerosAJugar, modalidad);
        }
        
        public System.Threading.Tasks.Task<WCF_Bingo.Clases.clsJugador[]> crearJugadorAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores, int nombreUsuario, int cantidadCartones, int cantidadNumerosAJugar, int modalidad) {
            return base.Channel.crearJugadorAsync(listaJugadores, nombreUsuario, cantidadCartones, cantidadNumerosAJugar, modalidad);
        }
        
        public WCF_Bingo.Clases.clsJugador[] actualizarEstados(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroAleatorio) {
            return base.Channel.actualizarEstados(listaJugadores, numeroAleatorio);
        }
        
        public System.Threading.Tasks.Task<WCF_Bingo.Clases.clsJugador[]> actualizarEstadosAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroAleatorio) {
            return base.Channel.actualizarEstadosAsync(listaJugadores, numeroAleatorio);
        }
        
        public WCF_Bingo.Clases.clsJugador[] jugadoresGanadores(WCF_Bingo.Clases.clsJugador[] listaJugadores) {
            return base.Channel.jugadoresGanadores(listaJugadores);
        }
        
        public System.Threading.Tasks.Task<WCF_Bingo.Clases.clsJugador[]> jugadoresGanadoresAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores) {
            return base.Channel.jugadoresGanadoresAsync(listaJugadores);
        }
        
        public WCF_Bingo.Clases.clsCarton consultarCarton(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroJugador, int indiceCarton) {
            return base.Channel.consultarCarton(listaJugadores, numeroJugador, indiceCarton);
        }
        
        public System.Threading.Tasks.Task<WCF_Bingo.Clases.clsCarton> consultarCartonAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroJugador, int indiceCarton) {
            return base.Channel.consultarCartonAsync(listaJugadores, numeroJugador, indiceCarton);
        }
        
        public int cantidadJugadores(WCF_Bingo.Clases.clsJugador[] listaJugadores) {
            return base.Channel.cantidadJugadores(listaJugadores);
        }
        
        public System.Threading.Tasks.Task<int> cantidadJugadoresAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores) {
            return base.Channel.cantidadJugadoresAsync(listaJugadores);
        }
        
        public int cantidadCartonesPorJugador(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroJugador) {
            return base.Channel.cantidadCartonesPorJugador(listaJugadores, numeroJugador);
        }
        
        public System.Threading.Tasks.Task<int> cantidadCartonesPorJugadorAsync(WCF_Bingo.Clases.clsJugador[] listaJugadores, int numeroJugador) {
            return base.Channel.cantidadCartonesPorJugadorAsync(listaJugadores, numeroJugador);
        }

        internal int crearJugador(List<clsJugador> listaJugadores, int nombreUsuario, int cantidadCartones, int cantidadNumerosAJugar, int modalidad)
        {
            throw new NotImplementedException();
        }
    }
}
